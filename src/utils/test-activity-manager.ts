#!/usr/bin/env bun

/**
 * –¢–µ—Å—Ç–µ—Ä —Å–∏—Å—Ç–µ–º—ã —É–º–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–≠–¢–ê–ü 9)
 * 
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É ActivityManager –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è
 */

import { Logger } from './logger.js';
import { ActivityManager } from '../core/activity-manager.js';

const testChatId = '316537427';

class ActivityTester {
  private activityManager: ActivityManager;

  constructor() {
    this.activityManager = new ActivityManager(testChatId);
  }

  async runAllTests(): Promise<void> {
    Logger.info('üìä –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...');
    
    console.log('\n=== –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –î–ò–ù–ê–ú–ò–ß–ï–°–ö–û–ô –ê–ö–¢–ò–í–ù–û–°–¢–ò ===');
    
    // –î–∞–µ–º –≤—Ä–µ–º—è —Å–∏—Å—Ç–µ–º–µ –ø—Ä–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    console.log('\n1. –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï –ê–ö–¢–ò–í–ù–û–°–¢–ò');
    this.testCurrentActivity();
    
    console.log('\n2. –ê–ù–ê–õ–ò–ó –ê–ö–¢–ò–í–ù–û–°–¢–ò –ü–û –í–†–ï–ú–ï–ù–ò');
    this.testTimeAnalysis();
    
    console.log('\n3. –°–ò–ú–£–õ–Ø–¶–ò–Ø –†–ê–ó–õ–ò–ß–ù–´–• –°–¶–ï–ù–ê–†–ò–ï–í');
    await this.testActivityScenarios();
    
    console.log('\n4. –ü–†–û–í–ï–†–ö–ê –ú–û–î–ò–§–ò–ö–ê–¢–û–†–û–í –ü–û–í–ï–î–ï–ù–ò–Ø');
    this.testBehaviorModifiers();
    
    this.activityManager.close();
    Logger.info('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã —Å–∏—Å—Ç–µ–º—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã');
  }

  private testCurrentActivity(): void {
    const modifiers = this.activityManager.getActivityModifiers();
    const stats = this.activityManager.getActivityStats();
    
    console.log('üìä –¢–ï–ö–£–©–ê–Ø –ê–ö–¢–ò–í–ù–û–°–¢–¨:');
    console.log(`   –ê–∫—Ç–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è: ${modifiers.isActiveTime ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
    console.log(`   –ú–Ω–æ–∂–∏—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–æ–≤: ${modifiers.responseMultiplier.toFixed(2)}x`);
    console.log(`   –ú–Ω–æ–∂–∏—Ç–µ–ª—å –∑–∞–¥–µ—Ä–∂–∫–∏: ${modifiers.delayMultiplier.toFixed(2)}x`);
    console.log(`   –ù–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —á–∞—Ç–∞: ${modifiers.inactivityPeriod} –º–∏–Ω—É—Ç`);
    console.log(`   –î–µ—Ç–∞–ª–∏: ${stats}`);
  }

  private testTimeAnalysis(): void {
    const now = new Date();
    
    console.log('üïí –ê–ù–ê–õ–ò–ó –ü–û –í–†–ï–ú–ï–ù–ò:');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —á–∞—Å—ã
    const testHours = [6, 12, 18, 23]; // —É—Ç—Ä–æ, –¥–µ–Ω—å, –≤–µ—á–µ—Ä, –Ω–æ—á—å
    
    testHours.forEach(hour => {
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏
      this.activityManager.updateActivityPattern();
      const modifiers = this.activityManager.getActivityModifiers();
      
      const timeDescription = hour < 6 ? '–Ω–æ—á—å' : 
                            hour < 12 ? '—É—Ç—Ä–æ' : 
                            hour < 18 ? '–¥–µ–Ω—å' : '–≤–µ—á–µ—Ä';
      
      console.log(`   ${hour}:00 (${timeDescription}): –º–Ω–æ–∂–∏—Ç–µ–ª—å ${modifiers.responseMultiplier.toFixed(2)}x, ${modifiers.isActiveTime ? '–∞–∫—Ç–∏–≤–Ω–æ' : '—Å–ø–æ–∫–æ–π–Ω–æ'}`);
    });
  }

  private async testActivityScenarios(): Promise<void> {
    console.log('üé¨ –°–¶–ï–ù–ê–†–ò–ò –ê–ö–¢–ò–í–ù–û–°–¢–ò:');
    
    const scenarios = [
      {
        name: '–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≥—Ä—É–ø–ø—ã',
        description: '–ú–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–Ω–∏'
      },
      {
        name: '–°–ø–æ–∫–æ–π–Ω—ã–π –ø–µ—Ä–∏–æ–¥',  
        description: '–ú–∞–ª–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è'
      },
      {
        name: '–î–æ–ª–≥–∞—è —Ç–∏—à–∏–Ω–∞',
        description: '–ë–æ–ª–µ–µ —á–∞—Å–∞ –±–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏–π'
      },
      {
        name: '–ê–∫—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä',
        description: '–°–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç'
      }
    ];

    for (const scenario of scenarios) {
      console.log(`\nüìã –°–¶–ï–ù–ê–†–ò–ô: ${scenario.name}`);
      console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${scenario.description}`);
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
      const modifiers = this.activityManager.getActivityModifiers();
      
      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –±–∞–∑–æ–≤—É—é –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ (–∫–∞–∫ –≤ response-engine)
      let baseChance = 0.4; // –±–∞–∑–æ–≤–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∏–∑ activityLevel
      
      // –ü—Ä–∏–º–µ–Ω—è–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
      let finalChance = baseChance * modifiers.responseMultiplier;
      
      // –õ–æ–≥–∏–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
      if (modifiers.inactivityPeriod > 60) {
        finalChance *= 1.5;
      } else if (modifiers.inactivityPeriod < 5) {
        finalChance *= 0.7;
      }
      
      const shouldRespond = Math.random() < finalChance;
      
      console.log(`   –ë–∞–∑–æ–≤–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: ${(baseChance * 100).toFixed(0)}%`);
      console.log(`   –ü–æ—Å–ª–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏: ${(finalChance * 100).toFixed(0)}%`);
      console.log(`   –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–º—É–ª—è—Ü–∏–∏: ${shouldRespond ? '‚úÖ –û–¢–í–ï–¢–ò–¢' : '‚ùå –ù–ï –û–¢–í–ï–¢–ò–¢'}`);
      
      await new Promise(resolve => setTimeout(resolve, 500));
    }
  }

  private testBehaviorModifiers(): void {
    console.log('üéõÔ∏è –ú–û–î–ò–§–ò–ö–ê–¢–û–†–´ –ü–û–í–ï–î–ï–ù–ò–Ø:');
    
    const modifiers = this.activityManager.getActivityModifiers();
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–ª–∏—è–Ω–∏–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ –Ω–∞ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
    const baseResponseTime = 2000; // 2 —Å–µ–∫—É–Ω–¥—ã –±–∞–∑–æ–≤–æ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞
    const modifiedResponseTime = baseResponseTime * modifiers.delayMultiplier;
    
    const baseActivity = 0.7; // 70% –±–∞–∑–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    const modifiedActivity = Math.min(1.0, baseActivity * modifiers.responseMultiplier);
    
    console.log('   –í–õ–ò–Ø–ù–ò–ï –ù–ê –ü–û–í–ï–î–ï–ù–ò–ï:');
    console.log(`   ‚îú‚îÄ –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${baseResponseTime}–º—Å ‚Üí ${modifiedResponseTime.toFixed(0)}–º—Å`);
    console.log(`   ‚îú‚îÄ –£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${(baseActivity * 100).toFixed(0)}% ‚Üí ${(modifiedActivity * 100).toFixed(0)}%`);
    console.log(`   ‚îú‚îÄ –†–µ–∂–∏–º: ${modifiers.isActiveTime ? '–∞–∫—Ç–∏–≤–Ω—ã–π' : '–ø–∞—Å—Å–∏–≤–Ω—ã–π'}`);
    console.log(`   ‚îî‚îÄ –ù–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —á–∞—Ç–∞: ${modifiers.inactivityPeriod} –º–∏–Ω—É—Ç`);
    
    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è
    console.log('\n   –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    if (modifiers.responseMultiplier > 1.5) {
      console.log('   üìà –í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å - –æ—Ç–≤–µ—á–∞—Ç—å —á–∞—â–µ');
    } else if (modifiers.responseMultiplier < 0.7) {
      console.log('   üìâ –ù–∏–∑–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å - –±—ã—Ç—å —Å–¥–µ—Ä–∂–∞–Ω–Ω–µ–µ');
    } else {
      console.log('   ‚öñÔ∏è –ù–æ—Ä–º–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å - –æ–±—ã—á–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ');
    }
    
    if (modifiers.inactivityPeriod > 120) {
      console.log('   üí§ –î–æ–ª–≥–∞—è —Ç–∏—à–∏–Ω–∞ - –º–æ–∂–Ω–æ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞—Ç—å –æ–±—â–µ–Ω–∏–µ');
    } else if (modifiers.inactivityPeriod < 2) {
      console.log('   üí¨ –ê–∫—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä - –Ω–µ –º–µ—à–∞—Ç—å —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ');
    }
  }

  private simulateTimeOfDay(hour: number): void {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã —Å–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫
    // –Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const tester = new ActivityTester();
await tester.runAllTests();