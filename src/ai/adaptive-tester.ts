import { ResponseEngine } from './response-engine.js';
import { UserProfiler } from '../analysis/user-profiler.js';
import { Logger } from '../utils/logger.js';
import { validateConfig } from '../core/config.js';
import { ModelSelector } from './model-selector.js';
import { promises as fs } from 'fs';

async function main() {
  try {
    // –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–∏—Ä–∞–µ–º –º–æ–¥–µ–ª—å –µ—Å–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞
    const modelSelector = new ModelSelector();
    await modelSelector.ensureModelConfigured();
    
    validateConfig();
    
    const personalityPath = 'chat/result_personality.json';
    const chatId = '316537427';
    
    try {
      await fs.access(personalityPath);
    } catch {
      Logger.error(`–§–∞–π–ª –ª–∏—á–Ω–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${personalityPath}`);
      Logger.error('–°–æ–∑–¥–∞–π—Ç–µ –ª–∏—á–Ω–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥–æ–π: bun run patterns result_analysis.json');
      process.exit(1);
    }

    console.log('\n' + '='.repeat(70));
    console.log('üé≠ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–î–ê–ü–¢–ò–í–ù–´–• –û–¢–í–ï–¢–û–í');
    console.log('='.repeat(70));
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–∏—á–Ω–æ—Å—Ç—å –∏ —Å–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤
    const personalityData = JSON.parse(await fs.readFile(personalityPath, 'utf-8'));
    const responseEngine = new ResponseEngine(personalityData, chatId);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∞–π–ª–µ—Ä
    const profiler = new UserProfiler(chatId);
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø-3 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const profiles = await profiler.analyzeAllUsers();
    const topUsers = profiles
      .sort((a, b) => b.messageCount - a.messageCount)
      .slice(0, 3);
    
    console.log(`\nüìä –ù–∞–π–¥–µ–Ω–æ ${profiles.length} –ø—Ä–æ—Ñ–∏–ª–µ–π, —Ç–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ç–æ–ø-3 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:\n`);
    
    // –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    const testMessages = [
      '–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?',
      '–ß—Ç–æ –¥—É–º–∞–µ—à—å –ø—Ä–æ –Ω–æ–≤–æ—Å—Ç–∏?', 
      '–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç',
      '–ö–∞–∫ –ø—Ä–æ—à–µ–ª –¥–µ–Ω—å?'
    ];
    
    for (let i = 0; i < Math.min(topUsers.length, 3); i++) {
      const profile = topUsers[i];
      const rank = ['ü•á', 'ü•à', 'ü•â'][i];
      
      console.log(`${rank} ${profile.userName}:`);
      console.log(`‚îú‚îÄ –°—Ç–∏–ª—å: —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç—å ${(profile.communicationStyle.formalityLevel * 100).toFixed(0)}%, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å ${(profile.communicationStyle.emotionalExpression * 100).toFixed(0)}%`);
      console.log(`‚îú‚îÄ –ü–æ–≤–µ–¥–µ–Ω–∏–µ: —é–º–æ—Ä ${(profile.socialBehavior.humor * 100).toFixed(0)}%, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ${(profile.socialBehavior.supportiveness * 100).toFixed(0)}%`);
      console.log(`‚îî‚îÄ –ò–Ω—Ç–µ—Ä–µ—Å—ã: ${profile.interests.topTopics.slice(0, 2).map(t => t.topic).join(', ')}`);
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º 2 —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      for (let j = 0; j < 2; j++) {
        const message = testMessages[j];
        console.log(`\n  üë§ ${profile.userName}: ${message}`);
        console.log(`  ü§ñ –ì–µ–π—Å–∞–Ω–¥—Ä –¥—É–º–∞–µ—Ç...`);
        
        try {
          const response = await responseEngine.generateResponse(message, profile.userName, Date.now());
          
          if (response) {
            console.log(`  üé≠ –ì–µ–π—Å–∞–Ω–¥—Ä: ${response}`);
          } else {
            console.log(`  ü§ê –ì–µ–π—Å–∞–Ω–¥—Ä –ø—Ä–æ–º–æ–ª—á–∞–ª`);
          }
        } catch (error) {
          console.log(`  ‚ùå –û—à–∏–±–∫–∞: ${error}`);
        }
        
        // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
        await new Promise(resolve => setTimeout(resolve, 1000));
      }
      
      console.log('');
    }
    
    console.log('='.repeat(70));
    console.log('üìà –ê–ù–ê–õ–ò–ó –ê–î–ê–ü–¢–ê–¶–ò–ò:');
    console.log('');
    console.log('–û–∂–∏–¥–∞–µ–º—ã–µ —Ä–∞–∑–ª–∏—á–∏—è –≤ –æ—Ç–≤–µ—Ç–∞—Ö:');
    console.log('‚îú‚îÄ –§–æ—Ä–º–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ‚Üí –±–æ–ª–µ–µ –≤–µ–∂–ª–∏–≤—ã–µ –æ—Ç–≤–µ—Ç—ã');
    console.log('‚îú‚îÄ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ‚Üí –±–æ–ª–µ–µ —ç–∫—Å–ø—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã');
    console.log('‚îú‚îÄ –Æ–º–æ—Ä–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ‚Üí –±–æ–ª—å—à–µ —à—É—Ç–æ–∫ –∏ —Å–º–∞–π–ª–æ–≤');
    console.log('‚îú‚îÄ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ‚Üí –æ—Ç–∫–ª–∏–∫ –Ω–∞ –∏—Ö –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø–æ–º–æ—á—å');
    console.log('‚îî‚îÄ –ò–Ω—Ç–µ—Ä–µ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ‚Üí —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ç–µ–º');
    console.log('');
    console.log('='.repeat(70));
    console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('='.repeat(70) + '\n');
    
    profiler.close();
    responseEngine.close();
    
  } catch (error) {
    Logger.error('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (import.meta.url === `file://${process.argv[1]}`) {
  main();
}