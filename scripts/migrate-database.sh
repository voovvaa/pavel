#!/usr/bin/env bash
set -euo pipefail

# --- –¶–≤–µ—Ç–∞/–ª–æ–≥–∏ ---
RED='\033[0;31m'; GREEN='\033[0;32m'; YELLOW='\033[1;33m'; BLUE='\033[0;34m'; PURPLE='\033[0;35m'; NC='\033[0m'
log(){ echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $*${NC}"; }
warn(){ echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] ‚ö†Ô∏è  $*${NC}"; }
error(){ echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ‚ùå $*${NC}"; exit 1; }
info(){ echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')] ‚ÑπÔ∏è  $*${NC}"; }
success(){ echo -e "${PURPLE}[$(date +'%Y-%m-%d %H:%M:%S')] ‚úÖ $*${NC}"; }

# --- –ê—Ä–≥—É–º–µ–Ω—Ç—ã ---
if [ $# -ne 1 ]; then
  error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <NAS_IP>"
fi
NAS_IP="$1"
NAS_USER="${NAS_USER:-volodya}"
SSH_KEY_PATH="${SSH_KEY_PATH:-$HOME/.ssh/synology_github_actions}"
PROJECT_DIR="${PROJECT_DIR:-/volume1/docker/geysandr-bot}"

log "üîß –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞ NAS ($NAS_IP)"

# --- –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É context –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö ---
log "üìä –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É context –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."

ssh -i "$SSH_KEY_PATH" "$NAS_USER@$NAS_IP" \
  "cd $PROJECT_DIR && /usr/local/bin/docker compose run --rm -v geysandr_bot_data:/app/data geysandr-bot bun -e \"
console.log('üîß –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
import { Database } from 'bun:sqlite';

try {
  const db = new Database('/app/data/memory.db');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
  const columns = db.prepare('PRAGMA table_info(messages)').all();
  console.log('üìä –¢–µ–∫—É—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏:', columns.map(c => c.name));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ context
  const hasContext = columns.some(col => col.name === 'context');
  
  if (hasContext) {
    console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ context —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
  } else {
    console.log('‚ûï –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É context...');
    db.exec('ALTER TABLE messages ADD COLUMN context TEXT');
    console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ context –¥–æ–±–∞–≤–ª–µ–Ω–∞');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  const newColumns = db.prepare('PRAGMA table_info(messages)').all();
  console.log('üìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏:', newColumns.map(c => c.name));
  
  db.close();
  console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
  
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error.message);
  process.exit(1);
}
\""

success "üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

log "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
ssh -i "$SSH_KEY_PATH" "$NAS_USER@$NAS_IP" \
  "cd $PROJECT_DIR && /usr/local/bin/docker compose restart"

success "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω - –≥–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!"