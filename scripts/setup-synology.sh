#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Synology NAS –¥–ª—è –ì–µ–π—Å–∞–Ω–¥—Ä–∞ –ö—É–ª–æ–≤–∏—á–∞
set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] ‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ‚ùå $1${NC}"
    exit 1
}

info() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')] ‚ÑπÔ∏è  $1${NC}"
}

success() {
    echo -e "${PURPLE}[$(date +'%Y-%m-%d %H:%M:%S')] ‚úÖ $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -ne 1 ]; then
    error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <NAS_IP>"
    echo "–ü—Ä–∏–º–µ—Ä: $0 192.168.1.100"
    exit 1
fi

NAS_IP=$1
NAS_USER="admin"
SSH_KEY_PATH="$HOME/.ssh/synology_github_actions"
PROJECT_DIR="/volume1/docker/geysandr-bot"

log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É Synology NAS –¥–ª—è –ì–µ–π—Å–∞–Ω–¥—Ä–∞ –ö—É–ª–æ–≤–∏—á–∞..."
info "NAS IP: $NAS_IP"
info "SSH User: $NAS_USER"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ NAS
log "üì° –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å NAS..."
if ! ping -c 3 $NAS_IP > /dev/null 2>&1; then
    error "NAS $NAS_IP –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ IP –∞–¥—Ä–µ—Å –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ."
fi
success "NAS –¥–æ—Å—Ç—É–ø–µ–Ω"

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSH –∫–ª—é—á–µ–π
log "üîê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSH –∫–ª—é—á–∏..."
if [ ! -f "$SSH_KEY_PATH" ]; then
    info "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π SSH –∫–ª—é—á –¥–ª—è GitHub Actions..."
    ssh-keygen -t ed25519 -f "$SSH_KEY_PATH" -C "github-actions@geysandr-bot" -N ""
    success "SSH –∫–ª—é—á —Å–æ–∑–¥–∞–Ω: $SSH_KEY_PATH"
else
    warn "SSH –∫–ª—é—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $SSH_KEY_PATH"
fi

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞ –Ω–∞ NAS
log "üì§ –ö–æ–ø–∏—Ä—É–µ–º SSH –∫–ª—é—á –Ω–∞ NAS..."
if ssh-copy-id -i "$SSH_KEY_PATH.pub" "$NAS_USER@$NAS_IP" 2>/dev/null; then
    success "SSH –∫–ª—é—á —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –Ω–∞ NAS"
else
    warn "–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á. –ü–æ–ø—Ä–æ–±—É–µ–º –≤—Ä—É—á–Ω—É—é..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ .ssh –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞ –≤—Ä—É—á–Ω—É—é
    ssh "$NAS_USER@$NAS_IP" "mkdir -p ~/.ssh && chmod 700 ~/.ssh" || error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å .ssh –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"
    
    PUBLIC_KEY=$(cat "$SSH_KEY_PATH.pub")
    ssh "$NAS_USER@$NAS_IP" "echo '$PUBLIC_KEY' >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys"
    success "SSH –∫–ª—é—á –¥–æ–±–∞–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é"
fi

# –¢–µ—Å—Ç SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å –∫–ª—é—á–æ–º
log "üîë –¢–µ—Å—Ç–∏—Ä—É–µ–º SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å –∫–ª—é—á–æ–º..."
if ssh -i "$SSH_KEY_PATH" -o StrictHostKeyChecking=no "$NAS_USER@$NAS_IP" "echo 'SSH OK'" > /dev/null 2>&1; then
    success "SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å –∫–ª—é—á–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    error "SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å –∫–ª—é—á–æ–º –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –Ω–∞ NAS
log "üìÅ –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –Ω–∞ NAS..."
ssh -i "$SSH_KEY_PATH" "$NAS_USER@$NAS_IP" "
    mkdir -p $PROJECT_DIR/{data,logs,chat,backups,scripts}
    chmod 755 $PROJECT_DIR
    chmod 755 $PROJECT_DIR/{data,logs,chat,backups,scripts}
"
success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –Ω–∞ NAS
log "üê≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker –Ω–∞ NAS..."
DOCKER_VERSION=$(ssh -i "$SSH_KEY_PATH" "$NAS_USER@$NAS_IP" "docker --version 2>/dev/null" || echo "")
if [ -z "$DOCKER_VERSION" ]; then
    error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ NAS. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏–∑ Package Center."
else
    success "Docker –Ω–∞–π–¥–µ–Ω: $DOCKER_VERSION"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ .env.docker —Ñ–∞–π–ª–∞
log "‚öôÔ∏è –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π .env.docker —Ñ–∞–π–ª..."
ssh -i "$SSH_KEY_PATH" "$NAS_USER@$NAS_IP" "cat > $PROJECT_DIR/.env.docker << 'EOF'
# –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º

# Telegram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
TELEGRAM_BOT_TOKEN=YOUR_TELEGRAM_BOT_TOKEN
ALLOWED_CHAT_ID=YOUR_CHAT_ID

# OpenAI –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
OPENAI_API_KEY=YOUR_OPENAI_API_KEY
OPENAI_MODEL=gpt-5-nano
AI_MODE=hybrid
AI_PROBABILITY=0.8

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–º—è—Ç–∏ –¥–ª—è Docker
DATABASE_PATH=/app/data/memory.db
MEMORY_DAYS=30
SUMMARY_AFTER_MESSAGES=50
SHORT_TERM_LIMIT=25
CONTEXT_RELEVANCE_THRESHOLD=0.7

# Production –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
DEV_MODE=false
NODE_ENV=production
PERSONALITY_FILE=/app/chat/result_personality.json
EOF

chmod 600 $PROJECT_DIR/.env.docker"
success ".env.docker —Å–æ–∑–¥–∞–Ω"

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ docker-compose.yml
log "üê≥ –°–æ–∑–¥–∞–µ–º docker-compose.yml..."
ssh -i "$SSH_KEY_PATH" "$NAS_USER@$NAS_IP" "cat > $PROJECT_DIR/docker-compose.yml << 'EOF'
# Docker Compose –¥–ª—è –ì–µ–π—Å–∞–Ω–¥—Ä–∞ –ö—É–ª–æ–≤–∏—á–∞

services:
  geysandr-bot:
    image: ghcr.io/username/geysandr-bot:latest  # –ó–∞–º–µ–Ω–∏—Ç–µ username –Ω–∞ –≤–∞—à GitHub username
    container_name: geysandr-kylovich-bot
    restart: unless-stopped
    
    env_file:
      - .env.docker
    
    volumes:
      - bot-data:/app/data
      - bot-logs:/app/logs
      - ./chat/result_personality.json:/app/chat/result_personality.json:ro
    
    healthcheck:
      test: [\"CMD\", \"bun\", \"run\", \"health-check\", \"--quick\"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    
    logging:
      driver: json-file
      options:
        max-size: \"50m\"
        max-file: \"3\"
    
    networks:
      - bot-network
    
    labels:
      - \"app=geysandr-bot\"
      - \"version=latest\"

volumes:
  bot-data:
    driver: local
    name: geysandr_bot_data
  bot-logs:
    driver: local
    name: geysandr_bot_logs

networks:
  bot-network:
    driver: bridge
    name: geysandr_network
EOF"
success "docker-compose.yml —Å–æ–∑–¥–∞–Ω"

# –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ñ–∞–π–ª–∞ –ª–∏—á–Ω–æ—Å—Ç–∏
log "üé≠ –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è —Ñ–∞–π–ª–∞ –ª–∏—á–Ω–æ—Å—Ç–∏..."
ssh -i "$SSH_KEY_PATH" "$NAS_USER@$NAS_IP" "cat > $PROJECT_DIR/chat/result_personality.json << 'EOF'
{
  \"patterns\": [
    {
      \"id\": \"greeting\",
      \"keywords\": [\"–ø—Ä–∏–≤–µ—Ç\", \"hello\", \"hi\"],
      \"responses\": [\"–ü—Ä–∏–≤–µ—Ç!\", \"–ó–¥–∞—Ä–æ–≤–∞!\", \"–ö–∞–∫ –¥–µ–ª–∞?\"],
      \"weight\": 10,
      \"context\": \"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\"
    }
  ],
  \"responseStyle\": {
    \"averageLength\": 25,
    \"commonWords\": [\"–ø—Ä–∏–≤–µ—Ç\", \"–∫–∞–∫\", \"–¥–µ–ª–∞\"],
    \"commonEmojis\": [\"üòä\", \"üëã\"],
    \"formalityLevel\": 0.3,
    \"activityLevel\": 1
  },
  \"schedule\": {
    \"activeHours\": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22],
    \"activeDays\": [0, 1, 2, 3, 4, 5, 6]
  }
}
EOF"
success "–ë–∞–∑–æ–≤–∞—è –ª–∏—á–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∞"

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–µ–ø–ª–æ—è
log "üìú –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç—ã –¥–µ–ø–ª–æ—è..."
if [ -d "scripts" ]; then
    scp -i "$SSH_KEY_PATH" -r scripts/* "$NAS_USER@$NAS_IP:$PROJECT_DIR/scripts/"
    ssh -i "$SSH_KEY_PATH" "$NAS_USER@$NAS_IP" "chmod +x $PROJECT_DIR/scripts/*.sh"
    success "–°–∫—Ä–∏–ø—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"
else
    warn "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è scripts –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ. –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Å–∫—Ä–∏–ø—Ç—ã..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –¥–µ–ø–ª–æ—è –Ω–∞ NAS
    ssh -i "$SSH_KEY_PATH" "$NAS_USER@$NAS_IP" "cat > $PROJECT_DIR/scripts/deploy.sh << 'EOF'
#!/bin/bash
set -e

cd /volume1/docker/geysandr-bot

echo \"üöÄ –î–µ–ø–ª–æ–π –ì–µ–π—Å–∞–Ω–¥—Ä–∞ –ö—É–ª–æ–≤–∏—á–∞...\"

# –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
echo \"üì¶ –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø...\"
tar -czf \"backups/backup_\$(date +%Y%m%d_%H%M%S).tar.gz\" data/ chat/ .env.docker 2>/dev/null || true

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
echo \"‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...\"
docker compose down || true

# –ü—É–ª–ª–∏–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–∑
echo \"üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–∑...\"
docker compose pull

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
echo \"‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...\"
docker compose up -d

echo \"‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!\"
EOF

chmod +x $PROJECT_DIR/scripts/deploy.sh"
    success "–ë–∞–∑–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è —Å–æ–∑–¥–∞–Ω"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
log "üîÑ –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞..."
ssh -i "$SSH_KEY_PATH" "$NAS_USER@$NAS_IP" "cat > $PROJECT_DIR/scripts/autostart.sh << 'EOF'
#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –¥–ª—è Task Scheduler
sleep 30  # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å–∏—Å—Ç–µ–º—ã

cd /volume1/docker/geysandr-bot
docker compose up -d

echo \"\$(date): Geysandr Bot autostart completed\" >> /var/log/geysandr-autostart.log
EOF

chmod +x $PROJECT_DIR/scripts/autostart.sh"
success "–°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ —Å–æ–∑–¥–∞–Ω"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
log "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤
info "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤..."
ssh -i "$SSH_KEY_PATH" "$NAS_USER@$NAS_IP" "ls -la $PROJECT_DIR"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker Compose
info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Docker Compose..."
if ssh -i "$SSH_KEY_PATH" "$NAS_USER@$NAS_IP" "cd $PROJECT_DIR && docker compose config" > /dev/null 2>&1; then
    success "Docker Compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞"
else
    warn "Docker Compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—à–∏–±–∫–∏"
fi

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è GitHub Secrets
log "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ GitHub Secrets:"
info "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
info "SYNOLOGY_HOST = $NAS_IP"
info "SYNOLOGY_USER = $NAS_USER"
echo
info "SYNOLOGY_SSH_KEY = (—Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–∏–∂–µ):"
echo -e "${YELLOW}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
cat "$SSH_KEY_PATH"
echo -e "${YELLOW}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"

# –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
log "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo
info "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ GitHub Secrets (—Å–º. –≤—ã—à–µ)"
info "2. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ $PROJECT_DIR/.env.docker —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏"
info "3. –û–±–Ω–æ–≤–∏—Ç–µ docker-compose.yml —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º GitHub username"
info "4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Task Scheduler –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞:"
info "   - Control Panel ‚Üí Task Scheduler ‚Üí Create ‚Üí Triggered Task"
info "   - Event: Boot-up"
info "   - Script: $PROJECT_DIR/scripts/autostart.sh"
info "5. –ü–µ—Ä–≤—ã–π –¥–µ–ø–ª–æ–π —á–µ—Ä–µ–∑ GitHub Actions –∏–ª–∏ –≤—Ä—É—á–Ω—É—é:"
info "   ssh -i $SSH_KEY_PATH $NAS_USER@$NAS_IP"
info "   cd $PROJECT_DIR && ./scripts/deploy.sh"

success "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Synology NAS –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
success "–ì–µ–π—Å–∞–Ω–¥—Ä –ö—É–ª–æ–≤–∏—á –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é!"

# –°–æ–∑–¥–∞–Ω–∏–µ summary —Ñ–∞–π–ª–∞
ssh -i "$SSH_KEY_PATH" "$NAS_USER@$NAS_IP" "cat > $PROJECT_DIR/SETUP_SUMMARY.md << EOF
# Synology NAS Setup Summary

## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: $(date)

### –°–æ–∑–¥–∞–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:
- $PROJECT_DIR/data - –¥–∞–Ω–Ω—ã–µ –±–æ—Ç–∞
- $PROJECT_DIR/logs - –ª–æ–≥–∏
- $PROJECT_DIR/chat - —Ñ–∞–π–ª—ã –ª–∏—á–Ω–æ—Å—Ç–∏
- $PROJECT_DIR/backups - –±—ç–∫–∞–ø—ã
- $PROJECT_DIR/scripts - —Å–∫—Ä–∏–ø—Ç—ã –¥–µ–ø–ª–æ—è

### –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:
- .env.docker - –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (—Ç—Ä–µ–±—É–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
- docker-compose.yml - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (—Ç—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è username)
- chat/result_personality.json - –±–∞–∑–æ–≤–∞—è –ª–∏—á–Ω–æ—Å—Ç—å
- scripts/deploy.sh - —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è
- scripts/autostart.sh - —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞

### SSH –∫–ª—é—á —Å–æ–∑–¥–∞–Ω:
- –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á: $SSH_KEY_PATH (–¥–ª—è GitHub Secrets)
- –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ NAS

### –°–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å GitHub Secrets
2. –û–±–Ω–æ–≤–∏—Ç—å .env.docker —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏
3. –û–±–Ω–æ–≤–∏—Ç—å docker-compose.yml —Å GitHub username
4. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Task Scheduler
5. –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä–≤—ã–π –¥–µ–ø–ª–æ–π

### –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
\`\`\`bash
# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ NAS
ssh -i $SSH_KEY_PATH $NAS_USER@$NAS_IP

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd $PROJECT_DIR

# –î–µ–ø–ª–æ–π
./scripts/deploy.sh

# –°—Ç–∞—Ç—É—Å
docker compose ps

# –õ–æ–≥–∏
docker compose logs -f geysandr-bot
\`\`\`
EOF"

info "üìÑ Summary —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ $PROJECT_DIR/SETUP_SUMMARY.md"