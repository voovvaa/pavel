#!/usr/bin/env bash
set -euo pipefail

default_user="volodya"
default_key="$HOME/.ssh/synology_github_actions"
default_dir="/volume1/docker/geysandr-bot"

read -rp "NAS IP: " NAS_IP
read -rp "NAS user [$default_user]: " NAS_USER
NAS_USER="${NAS_USER:-$default_user}"
read -rp "SSH key path [$default_key]: " SSH_KEY_PATH
SSH_KEY_PATH="${SSH_KEY_PATH:-$default_key}"
read -rp "Project dir on NAS [$default_dir]: " PROJECT_DIR
PROJECT_DIR="${PROJECT_DIR:-$default_dir}"

log() { printf '\033[0;32m[%(%F %T)T] %s\033[0m\n' -1 "$*"; }
warn(){ printf '\033[1;33m[%(%F %T)T] ‚ö†Ô∏è  %s\033[0m\n' -1 "$*"; }
error(){ printf '\033[0;31m[%(%F %T)T] ‚ùå %s\033[0m\n' -1 "$*"; exit 1; }

ssh_cmd() {
  local host="$NAS_USER@$NAS_IP"
  if [[ -f "$SSH_KEY_PATH" ]]; then
    ssh -i "$SSH_KEY_PATH" -o StrictHostKeyChecking=no "$host" "$@"
  else
    ssh -o StrictHostKeyChecking=no "$host" "$@"
  fi
}
scp_cmd() {
  local src="$1" dst="$2" host="$NAS_USER@$NAS_IP"
  if [[ -f "$SSH_KEY_PATH" ]]; then
    scp -i "$SSH_KEY_PATH" -o StrictHostKeyChecking=no -r "$src" "$host:$dst"
  else
    scp -o StrictHostKeyChecking=no -r "$src" "$host:$dst"
  fi
}

log "üì° –ü–∏–Ω–≥ NAS..."
ping -c 2 "$NAS_IP" >/dev/null 2>&1 || warn "Ping –Ω–µ –ø—Ä–æ—à—ë–ª ‚Äî –ø—Ä–æ–¥–æ–ª–∂—É –ø–æ SSH"

log "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª—é—á–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)..."
if [[ -f "$SSH_KEY_PATH.pub" ]]; then
  if ssh-copy-id -i "$SSH_KEY_PATH.pub" "$NAS_USER@$NAS_IP" 2>/dev/null; then
    log "‚úÖ –ö–ª—é—á —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ ssh-copy-id"
  else
    warn "ssh-copy-id –Ω–µ —É–¥–∞–ª—Å—è, –¥–æ–±–∞–≤–ª—è—é –∫–ª—é—á –≤—Ä—É—á–Ω—É—é"
    PUB=$(cat "$SSH_KEY_PATH.pub")
    ssh_cmd "mkdir -p ~/.ssh && chmod 700 ~/.ssh && echo '$PUB' >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys"
  fi
else
  warn "–ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏ $SSH_KEY_PATH.pub ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é"
fi

log "üìÅ –°–æ–∑–¥–∞—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –Ω–∞ NAS: $PROJECT_DIR"
ssh_cmd "mkdir -p $PROJECT_DIR/{data,logs,chat,backups,scripts} && chmod 755 $PROJECT_DIR $PROJECT_DIR/{data,logs,chat,backups,scripts}"

log "üê≥ –ü—Ä–æ–≤–µ—Ä—è—é Docker/Compose –Ω–∞ NAS"
DOCKER_V=$(ssh_cmd 'docker --version 2>/dev/null' || true)
[[ -n "$DOCKER_V" ]] || error "Docker –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ NAS ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏ –∏–∑ Package Center"

COMPOSE_CMD=$(ssh_cmd 'if docker compose version >/dev/null 2>&1; then echo "docker compose";
elif command -v docker-compose >/dev/null 2>&1; then echo "docker-compose";
elif [ -x /usr/local/bin/docker-compose ]; then echo "/usr/local/bin/docker-compose";
elif [ -x /var/packages/Docker/target/bin/docker-compose ]; then echo "/var/packages/Docker/target/bin/docker-compose";
else echo ""; fi')
[[ -n "$COMPOSE_CMD" ]] || error "docker compose –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ NAS"

log "‚öôÔ∏è  –ó–∞–≥—Ä—É–∂–∞—é .env.docker (–µ—Å–ª–∏ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—é —à–∞–±–ª–æ–Ω)"
if ! ssh_cmd "[ -f $PROJECT_DIR/.env.docker ]"; then
  scp_cmd /dev/stdin "$PROJECT_DIR/.env.docker" <<'EOF' >/dev/null 2>&1 || true
# Telegram
TELEGRAM_BOT_TOKEN=YOUR_TELEGRAM_BOT_TOKEN
ALLOWED_CHAT_ID=YOUR_CHAT_ID

# OpenAI
OPENAI_API_KEY=YOUR_OPENAI_API_KEY
OPENAI_MODEL=gpt-5-nano
AI_MODE=hybrid
AI_PROBABILITY=0.8

# Memory
DATABASE_PATH=/app/data/memory.db
MEMORY_DAYS=30
SUMMARY_AFTER_MESSAGES=50
SHORT_TERM_LIMIT=25
CONTEXT_RELEVANCE_THRESHOLD=0.7

# Production
DEV_MODE=false
NODE_ENV=production
PERSONALITY_FILE=/app/chat/result_personality.json
EOF
  ssh_cmd "chmod 600 $PROJECT_DIR/.env.docker"
fi

log "üé≠ –õ–∏—á–Ω–æ—Å—Ç—å (–µ—Å–ª–∏ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—é –∑–∞–≥–ª—É—à–∫—É)"
if ! ssh_cmd "[ -f $PROJECT_DIR/chat/result_personality.json ]"; then
  scp_cmd /dev/stdin "$PROJECT_DIR/chat/result_personality.json" <<'EOF' >/dev/null 2>&1 || true
{ "patterns":[{"id":"greeting","keywords":["–ø—Ä–∏–≤–µ—Ç","hello","hi"],"responses":["–ü—Ä–∏–≤–µ—Ç!","–ó–¥–∞—Ä–æ–≤–∞!","–ö–∞–∫ –¥–µ–ª–∞?"],"weight":10,"context":"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"}],
  "responseStyle":{"averageLength":25,"commonWords":["–ø—Ä–∏–≤–µ—Ç","–∫–∞–∫","–¥–µ–ª–∞"],"commonEmojis":["üòä","üëã"],"formalityLevel":0.3,"activityLevel":1},
  "schedule":{"activeHours":[9,10,11,12,13,14,15,16,17,18,19,20,21,22],"activeDays":[0,1,2,3,4,5,6]}
}
EOF
fi

log "üìú –°–æ—Ö—Ä–∞–Ω—è—é summary"
ssh_cmd "cat > $PROJECT_DIR/SETUP_SUMMARY.md << EOF
# Synology NAS Setup Summary
## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: $(date)
- –ü—Ä–æ–µ–∫—Ç: $PROJECT_DIR
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $NAS_USER
- Compose: $COMPOSE_CMD
EOF"

log "‚úÖ –ë–∞–∑–æ–≤—ã–π —Å–µ—Ç–∞–ø –∑–∞–≤–µ—Ä—à—ë–Ω. –î–∞–ª—å—à–µ –∏—Å–ø–æ–ª—å–∑—É–π ./deploy.sh –¥–ª—è —Å–±–æ—Ä–∫–∏/–∑–∞–ø—É—Å–∫–∞"
